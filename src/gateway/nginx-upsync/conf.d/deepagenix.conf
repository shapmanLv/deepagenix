# 开启 gzip 压缩
gzip on;
gzip_types text/plain text/css application/javascript application/json application/xml application/xml+rss text/javascript;
gzip_min_length 1000;

# upstream for core service
upstream core {
  ip_hash;
  server 127.0.0.1:11111 down;
  upsync consul:8500/v1/health/service/core upsync_timeout=6m upsync_interval=500ms upsync_type=consul_health strong_dependency=off;
  upsync_dump_path /usr/local/nginx/conf/servers/servers_core.conf;
  include /usr/local/nginx/conf/servers/servers_core.conf;
}

# upstream for python component
upstream component_python {
  ip_hash;
  server 127.0.0.1:11111 down;
  upsync consul:8500/v1/health/service/component-python upsync_timeout=6m upsync_interval=500ms upsync_type=consul_health strong_dependency=off;
  upsync_dump_path /usr/local/nginx/conf/servers/servers_component-python.conf;
  include /usr/local/nginx/conf/servers/servers_component-python.conf;
}

server {
  listen 80;

  # 前端静态资源加速与缓存控制
  location /static/ {
    root /var/www/frontend;
    
    # 设置缓存控制
    add_header Cache-Control "public, max-age=31536000, immutable"; # 1 year cache, suitable for versioned assets
    
    # 禁用缓存控制 no-cache（如果你希望即时更新，不缓存）
    # add_header Cache-Control "no-cache, no-store, must-revalidate";
    expires 1y;  # 设置过期时间为一年

    # 对 HTML 文件应用较短的缓存时间，避免长期缓存 HTML 文件
    location ~* \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";  # 不缓存 HTML 文件
        expires 0;
    }
  }

  location / {
    root /var/www/frontend;
    index index.html index.htm;
    try_files $uri $uri/ /index.html;
  }

  # API routes to core service
  location /dc/ {
    proxy_pass http://core/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }

  # API routes to python service
  location /dp/ {
    proxy_pass http://component_python/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }
}